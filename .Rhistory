xlab("Proportion anthropogenic ignitions") +#
ylab(units_simple[i]) +#
ggtitle(paste0(letters[let], ". ", names_no_units[i]))+#
scale_y_continuous(trans = "log10")+#
theme_pubr() +#
geom_line(aes(y = predict(segmented_list[[i]])), lwd=1)+#
# geom_segment(aes(x = segmented_list[[i]]$psi[2] - segmented_list[[i]]$psi[3],#
#              xend = segmented_list[[i]]$psi[2] + segmented_list[[i]]$psi[3],#
#              y = 1, yend=1),#
#              color = "blue", lwd = 1.5) +#
# geom_point(aes(x = segmented_list[[i]]$psi[2],y=1), color = "blue", size = 3)#
geom_vline(xintercept = segmented_list[[i]]$psi[2], lty =1) +#
geom_vline(xintercept = segmented_list[[i]]$psi[2]- segmented_list[[i]]$psi[3], lty =2) +#
geom_vline(xintercept = segmented_list[[i]]$psi[2]+ segmented_list[[i]]$psi[3], lty =2) #
} else if (num_breaks[i]=="0"){#
ggplot(data_list[[i]], aes(x=anthro, y=depend.var)) +#
geom_point(alpha = 0.5, color = "grey60") +#
xlab("Proportion anthropogenic ignitions") +#
ylab(units_simple[i]) +#
ggtitle(names_no_units[i]) +#
scale_y_continuous(trans = "log10")+#
theme_pubr() +#
geom_line(aes(y = predict(regression_list[[i]])), lwd=1)#
}#
}
ggarrange(#
ggplot_segmented(4, 1),#
ggplot_segmented(8, 2),#
ggplot_segmented(3, 3),#
ggplot_segmented(14, 4),#
nrow=2,#
ncol = 2#
)
ggarrange(#
ggplot_segmented(4, 1),#
ggplot_segmented(8, 2),#
ggplot_segmented(3, 3),#
ggplot_segmented(14, 4),#
nrow=2, ncol = 2#
)
letters[4]
names_no_units
ggplot_segmented<- function(i, let){#
if (num_breaks[i]=="1"){#
ggplot(data_list[[i]], aes(x=anthro, y=depend.var)) +#
geom_point(alpha = 0.5, color = "grey60") +#
xlab("Proportion anthropogenic ignitions") +#
ylab(units_simple[i]) +#
ggtitle(paste0(letters[let], ". ", names_no_units[i]))+#
scale_y_continuous(trans = "log10")+#
theme_pubr() +#
geom_line(aes(y = predict(segmented_list[[i]])), lwd=1)+#
# geom_segment(aes(x = segmented_list[[i]]$psi[2] - segmented_list[[i]]$psi[3],#
#              xend = segmented_list[[i]]$psi[2] + segmented_list[[i]]$psi[3],#
#              y = 1, yend=1),#
#              color = "blue", lwd = 1.5) +#
# geom_point(aes(x = segmented_list[[i]]$psi[2],y=1), color = "blue", size = 3)#
geom_vline(xintercept = segmented_list[[i]]$psi[2], lty =1) +#
geom_vline(xintercept = segmented_list[[i]]$psi[2]- segmented_list[[i]]$psi[3], lty =2) +#
geom_vline(xintercept = segmented_list[[i]]$psi[2]+ segmented_list[[i]]$psi[3], lty =2) #
} else if (num_breaks[i]=="0"){#
ggplot(data_list[[i]], aes(x=anthro, y=depend.var)) +#
geom_point(alpha = 0.5, color = "grey60") +#
xlab("Proportion anthropogenic ignitions") +#
ylab(units_simple[i]) +#
ggtitle(paste0(letters[let], ". ", names_no_units[i]))+#
scale_y_continuous(trans = "log10")+#
theme_pubr() +#
geom_line(aes(y = predict(regression_list[[i]])), lwd=1)#
}#
}
ggarrange(#
ggplot_segmented(4, 1),#
ggplot_segmented(8, 2),#
ggplot_segmented(3, 3),#
ggplot_segmented(14, 4),#
nrow=2, ncol = 2#
)
nrow(samples_df$ign=="Human")
nrow(samples_df[samples_df$ign=="Human",])
nrow(samples_df[samples_df$ign=="Lightning",])
fire_characteristics_ign
mean_char<-vector("list", 15)#
sd_char<-vector("list", 15)#
for (i in 1:15){#
mean_char[i]<-round(stats::aggregate(samples_ign_mean[,i], by=list(samples_ign_mean$ign), FUN=mean, na.rm=TRUE)[2],1)#
sd_char[i]<-round(stats::aggregate(samples_ign_mean[,i], by=list(samples_ign_mean$ign), FUN=sd, na.rm=TRUE)[2],1)#
}#
mean_char_df <- data.frame(matrix(unlist(mean_char), nrow=15, byrow=T))#
sd_char_df <- data.frame(matrix(unlist(sd_char), nrow=15, byrow=T))#
fire_char_ign<-cbind(mean_char_df,sd_char_df)#
#
names(fire_char_ign)<-c("Human Ign Mean", "Lightning Ign Mean", "Human Ign Sd", "Lightning Ign Sd")#
fire_characteristics_ign<-fire_char_ign#
fire_characteristics_ign<-data.frame(matrix(NA, nrow = 15, ncol = 3))#
names(fire_characteristics_ign)<-c("Characteristic", "Human Ign", "Lightning Ign")#
for(i in 1:2){#
fire_characteristics_ign[,i+1]<-paste0(mean_char_df[,i], " (+/-", sd_char_df[,i], ")")#
}#
#
fire_characteristics_ign[,1]<-names(samples_ign_mean[c(1:15)])#
#
# Stats on this#
# compare two unpaired groups - Unpaired t for Gaussian and Mann-Whitney for non-Gaussian#
# (Could use ks.test to see if gaussian (Kolmogorov-Smirnov Test)) - just assume not Gaussian#
sig_char<-vector("numeric", length=15)#
for (i in 1:15){#
sig_char[i]<-round(wilcox.test(samples_ign_mean[,i]~samples_ign_mean$ign)$p.value, 3)#
}#
fire_characteristics_ign$sig<-ifelse(sig_char<=0.001, "***",#
ifelse(sig_char<=0.01 & sig_char>0.001, "**",#
ifelse(sig_char<=0.05 & sig_char>0.01, "*",-9999)))#
#
### Table S2#
fire_characteristics_ign
samples_ign1<-samples_df[samples_df$anthro>0,]
samples_ign<-samples_ign1[!is.na(samples_ign1$anthro),]
samples_ign_mean<-samples_ign[,c(1:15, 379, 381)]
# Table S2#
mean_char<-vector("list", 15)#
sd_char<-vector("list", 15)#
for (i in 1:15){#
mean_char[i]<-round(stats::aggregate(samples_ign_mean[,i], by=list(samples_ign_mean$ign), FUN=mean, na.rm=TRUE)[2],1)#
sd_char[i]<-round(stats::aggregate(samples_ign_mean[,i], by=list(samples_ign_mean$ign), FUN=sd, na.rm=TRUE)[2],1)#
}
mean_char_df <- data.frame(matrix(unlist(mean_char), nrow=15, byrow=T))#
sd_char_df <- data.frame(matrix(unlist(sd_char), nrow=15, byrow=T))#
fire_char_ign<-cbind(mean_char_df,sd_char_df)#
#
names(fire_char_ign)<-c("Human Ign Mean", "Lightning Ign Mean", "Human Ign Sd", "Lightning Ign Sd")#
fire_characteristics_ign<-fire_char_ign#
fire_characteristics_ign<-data.frame(matrix(NA, nrow = 15, ncol = 3))#
names(fire_characteristics_ign)<-c("Characteristic", "Human Ign", "Lightning Ign")#
for(i in 1:2){#
fire_characteristics_ign[,i+1]<-paste0(mean_char_df[,i], " (+/-", sd_char_df[,i], ")")#
}#
#
fire_characteristics_ign[,1]<-names(samples_ign_mean[c(1:15)])
# Stats on this#
# compare two unpaired groups - Unpaired t for Gaussian and Mann-Whitney for non-Gaussian#
# (Could use ks.test to see if gaussian (Kolmogorov-Smirnov Test)) - just assume not Gaussian#
sig_char<-vector("numeric", length=15)#
for (i in 1:15){#
sig_char[i]<-round(wilcox.test(samples_ign_mean[,i]~samples_ign_mean$ign)$p.value, 3)#
}#
fire_characteristics_ign$sig<-ifelse(sig_char<=0.001, "***",#
ifelse(sig_char<=0.01 & sig_char>0.001, "**",#
ifelse(sig_char<=0.05 & sig_char>0.01, "*",-9999)))#
#
### Table S2#
fire_characteristics_ign
round(wilcox.test(samples_ign_mean[,1]~samples_ign_mean$ign)$p.value
)
wilcox.test(samples_ign_mean[,1]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,2]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,3]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,4]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,5]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,6]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,7]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,8]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,9]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,10]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,11]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,12]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,13]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,14]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,15]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,16]~samples_ign_mean$ign)$p.value
wilcox.test(samples_ign_mean[,15]~samples_ign_mean$ign)
wilcox.test(samples_ign_mean[,1]~samples_ign_mean$ign)
fire_characteristics_ign
slopes1
fire_chars
slope_stuff
# For fires started by people vs lightning#
# Function to compute mean annual (time) values of a fire characteristic (title) by ign type (ign)#
mean_annual_value_by_group<-function(title){#
value_by_group<-title %>% #
group_by(ign, time) %>% #
summarise(#
count = n(),#
value_by_group = mean(value, na.rm = TRUE)#
)#
value_by_group#
}#
#
# pass this list to function above#
grouped_list=vector("list", 15)#
for (i in 1:15){#
grouped_list[[i]]<-mean_annual_value_by_group(fire_chars[[i]])#
}
names(grouped_list)<-names_vector#
#
#fix the years#
for(i in c(1,4, 5, 13)){#
grouped_list[[i]]$year<-grouped_list[[i]]$time+2003#
}#
#
for(i in c(2, 6, 7, 10, 12)){#
grouped_list[[i]]$year<-grouped_list[[i]]$time+1984#
}#
#
for(i in c(3, 8, 9, 11, 14, 15)){#
grouped_list[[i]]$year<-grouped_list[[i]]$time+1992#
}#
# Fit linear model for each#
library(nlme)#
lm_summary_list<-vector("list", 15)#
for (i in 1:15){#
lm_summary_list[[i]]<-summary(lmList(value ~ time | ign, data=fire_chars[[i]], na.action=na.omit))#
}#
#
# Slopes of ign groups#
slopes<-data.frame(matrix(NA, nrow = 15, ncol = 3))#
slopes[,1]<-names_vector#
#
# pull out slopes and sig of slopes#
for (i in 1:15){#
slopes[i, 2]<-paste0(round(lm_summary_list[[i]]$coefficients[14], 2), " (+/-", round(lm_summary_list[[i]]$coefficients[17], 2), ")", #
ifelse(lm_summary_list[[i]]$coefficients[23]>0.1, " ",#
ifelse(lm_summary_list[[i]]$coefficients[23]>0.05 & lm_summary_list[[i]]$coefficients[23]<=0.1, "*",#
ifelse(lm_summary_list[[i]]$coefficients[23]>0.01 & lm_summary_list[[i]]$coefficients[23]<=0.05, "**",#
ifelse(lm_summary_list[[i]]$coefficients[23]<=0.01, "***", NA)))))#
slopes[i, 3]<-paste0(round(lm_summary_list[[i]]$coefficients[15], 2), " (+/-", round(lm_summary_list[[i]]$coefficients[18], 2), ")", #
ifelse(lm_summary_list[[i]]$coefficients[24]>0.1, " ",#
ifelse(lm_summary_list[[i]]$coefficients[24]>0.05 & lm_summary_list[[i]]$coefficients[24]<=0.1, "*",#
ifelse(lm_summary_list[[i]]$coefficients[24]>0.01 & lm_summary_list[[i]]$coefficients[24]<=0.05, "**",#
ifelse(lm_summary_list[[i]]$coefficients[24]<=0.01, "***", NA)))))#
}#
#
slopes_diff<-data.frame(matrix(NA, nrow = 15, ncol = 2))#
slopes_diff[,1]<-names_vector#
names(slopes_diff)<-c("Fire characteristic", "Greater")#
#
for (i in 1:15){#
slopes_diff[i, 2]<-ifelse(#
(lm_summary_list[[i]]$coefficients[14] > lm_summary_list[[i]]$coefficients[15] & #
lm_summary_list[[i]]$coefficients[14] > (lm_summary_list[[i]]$coefficients[15] + lm_summary_list[[i]]$coefficients[18])), "Human", #
ifelse(#
(lm_summary_list[[i]]$coefficients[15] > lm_summary_list[[i]]$coefficients[14] & #
lm_summary_list[[i]]$coefficients[15] > (lm_summary_list[[i]]$coefficients[14] + lm_summary_list[[i]]$coefficients[17])), "Lightning", #
"Neither"))#
}
slope_stuff<-cbind(slopes, slopes_diff)
slope_stuff<-slope_stuff[,c(-4)]
# Percent change for each over time period#
# Anthro ignitions#
initial<-vector("list", 15)#
final<-vector("list", 15)#
change<-vector("list", 15)#
perc_change<-vector("list", 15)#
#
for (c in 1:15){#
for (i in 2:3){#
initial[[c]][i]<-(summary(lmList(value ~ time | ign, data=fire_chars[[c]], na.action=na.omit))$coefficients[i])#
final[[c]][i]<-(stats::predict.lm(lmList(value ~ time | ign, data=fire_chars[[c]], na.action=na.omit)[[i]], newdata=data.frame(time=(max(fire_chars[[c]]$time)-min(fire_chars[[c]]$time)))))#
change[[c]][i]<-final[[c]][i]-initial[[c]][i]#
perc_change[[c]][i]<-(change[[c]][i]/initial[[c]][i])*100#
}#
}#
#
names(perc_change)<-names_vector#
#
perc_change_human<-vector("numeric", length=15)#
perc_change_lightning<-vector("numeric", length=15)#
for (i in 1:15){#
perc_change_human[i]<-perc_change[[i]][2]#
perc_change_lightning[i]<-perc_change[[i]][3]#
}#
#
slope_stuff$perc_change_human<-round(perc_change_human,2)#
slope_stuff$perc_change_lightning<-round(perc_change_lightning,2)#
#
### Table S3#
slope_stuff
summary(samples_df_mean$Perc_human_Short_mean)[2]#
samples_df_mean$anthro_group4<-#
ifelse(samples_df_mean$Perc_human_Short_mean<=samples_df_mean$Perc_human_Short_mean[2], 1, #
ifelse(samples_df_mean$Perc_human_Short_mean<=samples_df_mean$Perc_human_Short_mean[3] & samples_df_mean$Perc_human_Short_mean>samples_df$Perc_human_Short_mean[2], 2, #
ifelse(samples_df_mean$Perc_human_Short_mean<=samples_df_mean$Perc_human_Short_mean[5] & samples_df_mean$Perc_human_Short_mean>samples_df$Perc_human_Short_mean[3], 3,#
ifelse(samples_df_mean$Perc_human_Short_mean>samples_df_mean$Perc_human_Short_mean[5], 4, -9999#
))))#
#
samples_df_mean$anthro_group3<-#
ifelse(samples_df_mean$Perc_human_Short_mean<=0.25, 1, #
ifelse(samples_df_mean$Perc_human_Short_mean<0.75 & samples_df_mean$Perc_human_Short_mean>0.25, 2, #
ifelse(samples_df_mean$Perc_human_Short_mean>=0.75, 3, -9999#
)))#
#
samples_ign_mean$anthro_group3<-#
ifelse(samples_ign_mean$Perc_human_Short_mean<=0.25, 1, #
ifelse(samples_ign_mean$Perc_human_Short_mean<0.75 & samples_ign_mean$Perc_human_Short_mean>0.25, 2, #
ifelse(samples_ign_mean$Perc_human_Short_mean>=0.75, 3, -9999#
)))
samples_df_mean$Mean_FRP_MODIS_mean.z<-scale(samples_df_mean$Mean_FRP_MODIS_mean)
samples_df_mean$Std_JD_Short_mean.z<-scale(samples_df_mean$Std_JD_Short_mean)#
samples_df_mean$Number_fires_Short_mean.z<-scale(samples_df_mean$Number_fires_Short_mean)#
samples_df_mean$Perc_human_Short_mean.z<-scale(samples_df_mean$Perc_human_Short_mean)#
samples_df_mean$Mean_area_Short_mean.z<-scale(samples_df_mean$Mean_area_Short_mean)#
samples_df_mean$anthro_group3<-as.factor(samples_df_mean$anthro_group3)#
#
# model size as a function of season length, frequency, and anthro ign#
size1 <- lm(Mean_area_Short_mean.z ~ Std_JD_Short_mean.z + Number_fires_Short_mean.z + Perc_human_Short_mean.z, samples_df_mean)#
summary(size1)
intensity1 <- lm(Mean_FRP_MODIS_mean.z ~ Std_JD_Short_mean.z + Number_fires_Short_mean.z + Perc_human_Short_mean.z, samples_df_mean)#
summary(intensity1)
relImp_size<-calc.relimp(size1, type="lmg", rela=TRUE)
ibrary(relaimpo)#
relImp_size<-calc.relimp(size1, type="lmg", rela=TRUE)#
sort(relImp_size$lmg, decreasing=TRUE)
library(relaimpo)
relImp_size<-calc.relimp(size1, type="lmg", rela=TRUE)#
sort(relImp_size$lmg, decreasing=TRUE)
relImp_intensity<-calc.relimp(intensity1, type="lmg", rela=TRUE)#
sort(relImp_intensity$lmg, decreasing=TRUE)
relImp_size
ggarrange(p1,p2, ncol=2, nrow=1, legend=c("right"), common.legend=TRUE)
ggarrange(make_nich_fig(2, 1,1), make_nich_fig2(4, 3,2),
ncol=2, nrow=1, legend=c("right"), common.legend=TRUE)
ggarrange(make_nich_fig(8, 4,1), make_nich_fig2(20, 19,2),#
ncol=2, nrow=1, legend=c("right"), common.legend=TRUE)
means_sds <- samples_ign_mean %>%#
group_by(ign) %>%#
summarise(mean_frp = median(log(Mean_FRP_MODIS_mean), na.rm=T),#
sd_frp = sd(log(Mean_FRP_MODIS_mean), na.rm = T),#
mean_area = median(log(Mean_area_Short_mean)),#
sd_area = sd(log(Mean_area_Short_mean)),#
mean_jd = median(log(Std_JD_Short_mean2), na.rm=T),#
sd_jd = sd(log(Std_JD_Short_mean2), na.rm = T),#
mean_n = median(log(Number_fires_Short_mean2), na.rm=T),#
sd_n = sd(log(Number_fires_Short_mean2), na.rm = T)) %>%#
ungroup %>%#
mutate(lowerf = mean_frp - sd_frp,#
upperf = mean_frp + sd_frp,#
lowera = mean_area - sd_area,#
uppera = mean_area + sd_area,#
lowerj = mean_jd - sd_jd,#
upperj = mean_jd + sd_jd,#
lowern = mean_n - sd_n,#
uppern = mean_n + sd_n)#
#
library(scales)#
p1 <- ggplot(samples_ign_mean, aes(x=(Mean_area_Short_mean), #
y=(Mean_FRP_MODIS_mean),#
color = ign)) +#
geom_point(alpha = 0.4, size = 1) +#
geom_errorbar(data = means_sds, width=0, #alpha = .2,#
aes(x = exp(mean_area),#
ymin = exp(mean_frp - sd_frp),#
ymax = exp(mean_frp + sd_frp)),#
inherit.aes = FALSE) +#
geom_errorbarh(data = means_sds, height=0, #alpha = .2,#
aes(y = exp(mean_frp),#
xmin = exp(lowera),#
xmax = exp(mean_area + sd_area)),#
inherit.aes = FALSE)+#
geom_point(data=means_sds, alpha = .2, size=1.5, aes(x=exp(mean_area), y=exp(mean_frp)), inherit.aes = FALSE) +#
ggtitle("a.")      +#
scale_y_continuous(trans = "log10") +#
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),#
labels = trans_format("log10", math_format(10^.x))) + #
scale_color_manual(values = c("#E69F00", "#56B4E9"),name = "Ignition Source")+#
ylab("Average Intensity (MW)") +#
xlab("Average Fire Size (ha)") +#
#annotation_logticks()  +#
theme_pubr();p1#
p2 <- ggplot(samples_ign_mean, aes(x=Number_fires_Short_mean2, #
y=Std_JD_Short_mean2,#
color = ign)) +#
geom_point(alpha = 0.4, size = 1) +#
geom_errorbar(data = means_sds, width=0, #alpha = .2,#
aes(x = exp(mean_n),#
ymin = exp(mean_jd - sd_jd),#
ymax = exp(mean_jd + sd_jd)),#
inherit.aes = FALSE) +#
geom_errorbarh(data = means_sds, height=0, #alpha = .2,#
aes(y = exp(mean_jd),#
xmin = exp(lowern),#
xmax = exp(mean_n + sd_n)),#
inherit.aes = FALSE)+#
ggtitle("b.")              + #
geom_point(data=means_sds, alpha = .2, size=1.5, aes(x=exp(mean_n), y=exp(mean_jd)), inherit.aes = FALSE) +#
scale_y_continuous(trans = "log10") +#
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),#
labels = trans_format("log10", math_format(10^.x))) +   scale_color_manual(values = c("#E69F00", "#56B4E9"),name = "Ignition Source")+#
xlab("Fire frequency (n fires)") +#
ylab("Season Length (days)") +#
#annotation_logticks()  +#
theme_pubr();p2#
#
ggarrange(p1,p2, ncol=2, nrow=1, legend=c("right"), common.legend=TRUE)
names(samples_df_mean)
summary(samples_df_mean$Perc_human_Short_mean)[2]#
samples_df_mean$anthro_group4<-#
ifelse(samples_df_mean$Perc_human_Short_mean<=samples_df_mean$Perc_human_Short_mean[2], 1, #
ifelse(samples_df_mean$Perc_human_Short_mean<=samples_df_mean$Perc_human_Short_mean[3] & samples_df_mean$Perc_human_Short_mean>samples_df$Perc_human_Short_mean[2], 2, #
ifelse(samples_df_mean$Perc_human_Short_mean<=samples_df_mean$Perc_human_Short_mean[5] & samples_df_mean$Perc_human_Short_mean>samples_df$Perc_human_Short_mean[3], 3,#
ifelse(samples_df_mean$Perc_human_Short_mean>samples_df_mean$Perc_human_Short_mean[5], 4, -9999#
))))#
#
samples_df_mean$anthro_group3<-#
ifelse(samples_df_mean$Perc_human_Short_mean<=0.25, 1, #
ifelse(samples_df_mean$Perc_human_Short_mean<0.75 & samples_df_mean$Perc_human_Short_mean>0.25, 2, #
ifelse(samples_df_mean$Perc_human_Short_mean>=0.75, 3, -9999#
)))#
#
samples_ign_mean$anthro_group3<-#
ifelse(samples_ign_mean$Perc_human_Short_mean<=0.25, 1, #
ifelse(samples_ign_mean$Perc_human_Short_mean<0.75 & samples_ign_mean$Perc_human_Short_mean>0.25, 2, #
ifelse(samples_ign_mean$Perc_human_Short_mean>=0.75, 3, -9999#
)))
make_nich_fig<-function(variable1, variable2, let){#
gg1 <- merge(samples_ign_mean, aggregate(cbind(mean.x=log(samples_ign_mean[,variable1]), mean.y=log(samples_ign_mean[,variable2]))~anthro_group3, samples_ign_mean, mean, na.action=na.omit), by="anthro_group3")#
gg <- merge(gg1, aggregate(cbind(se.x=log(samples_ign_mean[,variable1]), se.y=log(samples_ign_mean[,variable2]))~anthro_group3, samples_ign_mean, sd, na.action=na.omit), by="anthro_group3")#
ggplot(gg, aes(log(gg[,variable1+1]), log(gg[,variable2+1]),color=factor(anthro_group3)))+#
geom_point(alpha=.4, size=1)+#
ggtitle(paste0(letters[let], ". "))+#
labs(x=paste0("log ", names_simple[variable1]), y=paste0("log ", names_simple[variable2]), color="Ignition Source")+ #
scale_colour_manual(values=(cbPalette[c(2,1)]), labels=c("Primarily Lightning (>75%)", "Primarily Anthropogenic (>75%)")) +#
geom_point(data=gg, alpha = .2, size=1.5, aes(x=mean.x, y=mean.y), inherit.aes = FALSE)+#
geom_errorbar(data=gg, width=0, alpha = .2, aes(x=mean.x, ymin=mean.y-se.y,ymax=mean.y+se.y), inherit.aes = FALSE)+#
geom_errorbarh(data=gg, height=0, alpha = .2,  aes(y=mean.y, xmin=mean.x-se.x,xmax=mean.x+se.x), inherit.aes = FALSE)#
}	#
samples_ign_mean$Std_JD_Short_mean2<-ifelse(samples_ign_mean$Std_JD_Short_mean==0, NA, samples_ign_mean$Std_JD_Short_mean)#
samples_ign_mean$Number_fires_Short_mean2<-ifelse(samples_ign_mean$Number_fires_Short_mean==0, NA, samples_ign_mean$Number_fires_Short_mean)#
#
names(samples_ign_mean)#
#
make_nich_fig2<-function(variable1, variable2, let){#
gg1 <- merge(samples_ign_mean, aggregate(cbind(mean.x=log(samples_ign_mean[,variable1]), mean.y=log(samples_ign_mean[,variable2]))~anthro_group3, samples_ign_mean, mean, na.action=na.omit), by="anthro_group3")#
gg <- merge(gg1, aggregate(cbind(se.x=log(samples_ign_mean[,variable1]), se.y=log(samples_ign_mean[,variable2]))~anthro_group3, samples_ign_mean, sd, na.action=na.omit), by="anthro_group3")#
ggplot(gg, aes(log(gg[,variable1]), log(gg[,variable2]),color=factor(anthro_group3)))+#
geom_point(alpha=.2, size=1)+#
ggtitle(paste0(letters[let], ". "))+#
labs(x=paste0("log ", names_simple[3]), y=paste0("log ", names_simple[14]), color="Ignition Source")+ #
scale_colour_manual(values=(cbPalette[c(2,1)]), labels=c("Primarily Lightning (>75%)", "Primarily Anthropogenic (>75%)")) +#
geom_point(data=gg, alpha = .2, size=1.5, aes(x=mean.x, y=mean.y), inherit.aes = FALSE)+#
geom_errorbar(data=gg, width=0, alpha = .2, aes(x=mean.x, ymin=mean.y-se.y,ymax=mean.y+se.y), inherit.aes = FALSE)+#
geom_errorbarh(data=gg, height=0, alpha = .2, aes(y=mean.y, xmin=mean.x-se.x,xmax=mean.x+se.x),  inherit.aes = FALSE)#
}
ggarrange(make_nich_fig(8, 4,1), make_nich_fig2(20, 19,2),#
ncol=2, nrow=1, legend=c("right"), common.legend=TRUE)
means_sds <- samples_ign_mean %>%#
group_by(ign) %>%#
summarise(mean_frp = median(log(Mean_FRP_MODIS_mean), na.rm=T),#
sd_frp = sd(log(Mean_FRP_MODIS_mean), na.rm = T),#
mean_area = median(log(Mean_area_Short_mean)),#
sd_area = sd(log(Mean_area_Short_mean)),#
mean_jd = median(log(Std_JD_Short_mean2), na.rm=T),#
sd_jd = sd(log(Std_JD_Short_mean2), na.rm = T),#
mean_n = median(log(Number_fires_Short_mean2), na.rm=T),#
sd_n = sd(log(Number_fires_Short_mean2), na.rm = T)) %>%#
ungroup %>%#
mutate(lowerf = mean_frp - sd_frp,#
upperf = mean_frp + sd_frp,#
lowera = mean_area - sd_area,#
uppera = mean_area + sd_area,#
lowerj = mean_jd - sd_jd,#
upperj = mean_jd + sd_jd,#
lowern = mean_n - sd_n,#
uppern = mean_n + sd_n)#
#
library(scales)#
p1 <- ggplot(samples_ign_mean, aes(x=(Mean_area_Short_mean), #
y=(Mean_FRP_MODIS_mean),#
color = ign)) +#
geom_point(alpha = 0.4, size = 1) +#
geom_errorbar(data = means_sds, width=0, #alpha = .2,#
aes(x = exp(mean_area),#
ymin = exp(mean_frp - sd_frp),#
ymax = exp(mean_frp + sd_frp)),#
inherit.aes = FALSE) +#
geom_errorbarh(data = means_sds, height=0, #alpha = .2,#
aes(y = exp(mean_frp),#
xmin = exp(lowera),#
xmax = exp(mean_area + sd_area)),#
inherit.aes = FALSE)+#
geom_point(data=means_sds, alpha = .2, size=1.5, aes(x=exp(mean_area), y=exp(mean_frp)), inherit.aes = FALSE) +#
ggtitle("a.")      +#
scale_y_continuous(trans = "log10") +#
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),#
labels = trans_format("log10", math_format(10^.x))) + #
scale_color_manual(values = c("#E69F00", "#56B4E9"),name = "Ignition Source")+#
ylab("Average Intensity (MW)") +#
xlab("Average Fire Size (ha)") +#
#annotation_logticks()  +#
theme_pubr();p1#
p2 <- ggplot(samples_ign_mean, aes(x=Number_fires_Short_mean2, #
y=Std_JD_Short_mean2,#
color = ign)) +#
geom_point(alpha = 0.4, size = 1) +#
geom_errorbar(data = means_sds, width=0, #alpha = .2,#
aes(x = exp(mean_n),#
ymin = exp(mean_jd - sd_jd),#
ymax = exp(mean_jd + sd_jd)),#
inherit.aes = FALSE) +#
geom_errorbarh(data = means_sds, height=0, #alpha = .2,#
aes(y = exp(mean_jd),#
xmin = exp(lowern),#
xmax = exp(mean_n + sd_n)),#
inherit.aes = FALSE)+#
ggtitle("b.")              + #
geom_point(data=means_sds, alpha = .2, size=1.5, aes(x=exp(mean_n), y=exp(mean_jd)), inherit.aes = FALSE) +#
scale_y_continuous(trans = "log10") +#
scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),#
labels = trans_format("log10", math_format(10^.x))) +   scale_color_manual(values = c("#E69F00", "#56B4E9"),name = "Ignition Source")+#
xlab("Fire frequency (n fires)") +#
ylab("Season Length (days)") +#
#annotation_logticks()  +#
theme_pubr();p2
ggarrange(p1,p2, ncol=2, nrow=1, legend=c("right"), common.legend=TRUE)
